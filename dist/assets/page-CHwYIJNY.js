import{j as e,R as p,C as c}from"./index-AWqnUruu.js";import{C as t}from"./ComponentContainerCard-Bqda1ENg.js";import{P as h}from"./PageTitle-BMea1XiK.js";import{U as v}from"./UIExamplesList-CEfTn5ae.js";import{O as s,P as n,a as l,b as a}from"./OverlayTrigger-Bf7_-w-W.js";import{B as i}from"./Button-BMCNuBN9.js";import"./Card-Flgoo5n_.js";import"./divWithClassName-BSgXz21C.js";import"./useWindow-DQikT-kc.js";import"./hook-CWbxctkg.js";import"./extends-CF3RwP-h.js";import"./mergeOptionsWithPopperConfig-BloQIH_C.js";import"./hasClass-Du_ELl1y.js";import"./NoopTransition-BhvC9FAz.js";import"./Button-Du7OjY40.js";const m=()=>{const r=e.jsxs(n,{id:"popover-basic",children:[e.jsx(a,{as:"h3",children:"Popover title"}),e.jsx(l,{children:"And here's some amazing content. It's very engaging. Right?"})]});return e.jsx(t,{id:"live-demo",title:"Live demo",description:e.jsxs(e.Fragment,{children:[" ","We use JavaScript similar to the snippet above to render the following live popover. Titles are set via ",e.jsx("code",{children:"data-bs-title"})," and body content is set via ",e.jsx("code",{children:"data-bs-content"}),"."]}),children:e.jsx(s,{trigger:"click",placement:"right",overlay:r,children:e.jsx(i,{type:"button",variant:"danger",children:"Click to toggle popover"})})})},x=()=>{const r=["top","bottom","left","right"];return e.jsx(t,{id:"popover-directions",title:"Popover Directions",description:e.jsx(e.Fragment,{children:"Four options are available: top, right, bottom, and left aligned."}),children:e.jsx("div",{className:"d-flex flex-wrap gap-2",children:r.map((o,d)=>e.jsx(s,{trigger:"click",placement:o,overlay:e.jsx(n,{id:`popover-positioned-${o}`,children:e.jsx(l,{children:"Vivamus sagittis lacus vel augue laoreet rutrum faucibus."})}),children:e.jsxs(i,{variant:"primary",children:["Popover on ",o]})},d))})})},g=()=>{const r=e.jsxs(n,{children:[e.jsx(a,{as:"h3",children:"Dismissible popover"}),e.jsx(l,{children:"And here's some amazing content. It's very engaging. Right?"})]});return e.jsx(t,{id:"",title:"Dismiss on Next Click",description:e.jsxs(e.Fragment,{children:[" ","Use the ",e.jsx("code",{children:"focus"})," trigger to dismiss popovers on the user’s next click of a different element than the toggle element."]}),children:e.jsx(s,{trigger:"focus",placement:"right",overlay:r,children:e.jsx(i,{variant:"success",tabIndex:0,children:"Dismissible popover"})})})},j=()=>{const r=e.jsxs(n,{children:[e.jsx(a,{as:"h3",children:"Ohh Wow !"}),e.jsx(l,{children:"And here's some amazing content. It's very engaging. Right?"})]});return e.jsx(t,{id:"",title:"Hover",description:e.jsxs(e.Fragment,{children:["Use the ",e.jsx("code",{children:'data-bs-trigger="hover"'})," trigger Hover to show popover."]}),children:e.jsx(s,{trigger:["hover","focus"],placement:"right",overlay:r,children:e.jsx(i,{variant:"dark",children:" Please Hover Me"})})})},u=()=>{const r=o=>e.jsxs(n,{className:`${o}-popover`,children:[e.jsxs(a,{as:"h3",children:[o.charAt(0).toUpperCase()+o.slice(1)," popover"]}),e.jsx(l,{children:"This popover is themed via CSS variables."})]});return e.jsx(t,{id:"",title:"Custom Popovers",description:e.jsxs(e.Fragment,{children:["ou can customize the appearance of popovers using CSS variables. We set a custom class with"," ",e.jsx("code",{children:'data-bs-custom-class="primary-popover"'})," to scope our custom appearance and use it to override some of the local CSS variables."]}),children:e.jsxs("div",{className:"button-list",children:[e.jsx(s,{trigger:"click",placement:"top",overlay:r("primary"),children:e.jsx(i,{variant:"primary",children:"Primary popover"})}),e.jsx(s,{trigger:"click",placement:"top",overlay:r("success"),children:e.jsx(i,{variant:"success",children:"Success popover"})}),e.jsx(s,{trigger:"click",placement:"top",overlay:r("danger"),children:e.jsx(i,{variant:"danger",children:"Danger popover"})}),e.jsx(s,{trigger:"click",placement:"top",overlay:r("info"),children:e.jsx(i,{variant:"info",children:"Info popover"})})]})})},b=()=>{const r=e.jsx(n,{children:e.jsx(l,{children:"Disabled popover"})});return e.jsx(t,{title:"Disabled Elements",id:"disabled",description:e.jsxs(e.Fragment,{children:["Elements with the ",e.jsx("code",{children:"disabled"})," attribute aren’t interactive, meaning users cannot hover or click them to trigger a popover (or tooltip). As a workaround, you’ll want to trigger the popover from a wrapper ",e.jsx("code",{children:"<div>"})," or ",e.jsx("code",{children:"<span>"})," and override the ",e.jsx("code",{children:"pointer-events"})," on the disabled element."]}),children:e.jsx(s,{placement:"right",overlay:r,children:e.jsx("span",{className:"d-inline-block",children:e.jsx(i,{disabled:!0,style:{pointerEvents:"none"},children:"Disabled button"})})})})},U=()=>e.jsxs(e.Fragment,{children:[e.jsx(h,{title:"Popovers"}),e.jsxs(p,{children:[e.jsxs(c,{xl:9,children:[e.jsx(m,{}),e.jsx(x,{}),e.jsx(g,{}),e.jsx(j,{}),e.jsx(u,{}),e.jsx(b,{})]}),e.jsx(c,{xl:3,children:e.jsx(v,{examples:[{link:"#live-demo",label:"Live demo"},{link:"#popover-directions",label:"Popover Directions"},{link:"#dismiss",label:"Dismiss on Next Click"},{link:"#hover",label:"Hover"},{link:"#custom-popovers",label:"Custom Popovers"},{link:"#disabled",label:"Disabled"}]})})]})]});export{U as default};
